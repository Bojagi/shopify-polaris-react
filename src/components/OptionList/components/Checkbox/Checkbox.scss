@import '../../../../styles/common';

.Checkbox {
  position: relative;
  width: 100%;
  margin: var(--p-choice-margin);
}

.Input {
  @include visually-hidden;
}

.Checkbox {
  .Input {
    &.keyFocused {
      + .Backdrop {
        @include focus-ring($style: 'focused');
      }
    }

    &:active:not(:disabled),
    &:checked,
    &.Input-indeterminate {
      + .Backdrop {
        @include control-backdrop(active);
      }
      ~ .Icon {
        transform: translate(-50%, -50%) scale(1);
        opacity: 1;
        transition: opacity var(--p-duration-1-5-0) var(--p-ease),
          transform var(--p-duration-1-5-0) var(--p-ease);
      }
    }

    &:disabled {
      + .Backdrop {
        @include control-backdrop(disabled);
      }
    }

    &:disabled:checked {
      + .Backdrop {
        background: var(--p-border-disabled);
        &::before {
          background: var(--p-border-disabled);
        }
      }
    }
  }

  &.active {
    .Backdrop {
      @include focus-ring($style: 'focused');
    }
  }

  .Backdrop {
    @include control-backdrop();
    position: relative;
    display: block;
    width: 100%;
    height: 100%;
    @include focus-ring($border-width: var(--p-control-border-width));
  }

  .Icon {
    transform: translate(-50%, -50%) scale(0.25);
    opacity: 0;
    transition: opacity var(--p-duration-1-0-0) var(--p-ease),
      transform var(--p-duration-1-0-0) var(--p-ease);
  }
}

.Icon {
  @include recolor-icon(var(--p-icon-on-interactive));
  position: absolute;
  top: 50%;
  left: 50%;
  transform-origin: 50% 50%;
  pointer-events: none;

  @media (-ms-high-contrast: active) {
    fill: ms-high-contrast-color('text');
  }
}
// stylelint-enable selector-max-specificity, selector-max-class, selector-max-combinators, max-nesting-depth
