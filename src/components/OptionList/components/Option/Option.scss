@import '../../../../styles/common';

$min-height: control-height();
$control-vertical-adjustment: rem(2px);

.Option {
  @include unstyled-button;
  @include unstyled-link;
  width: 100%;
  min-height: $min-height;
  text-align: left;
}

.SingleSelectOption {
  @include unstyled-button;
  text-align: left;

  &:not(.disabled) {
    color: inherit;
  }

  .Media {
    padding: 0 spacing(tight) 0 0;
  }
}

.Label,
.SingleSelectOption {
  display: flex;
  align-items: flex-start;
  width: 100%;
  padding: spacing(tight) spacing();
}

.Checkbox {
  box-sizing: border-box;
  display: flex;
  flex-shrink: 0;
  width: var(--p-choice-size);
  height: var(--p-choice-size);
  margin-right: spacing(tight);
  margin-left: calc(-1 * var(--p-choice-margin));
}

.disabled {
  .Media {
    @include recolor-icon(var(--p-icon-disabled));
  }
}

.Media {
  @include recolor-icon(var(--p-icon));
  padding: 0 spacing(tight);
}

.Option {
  border-radius: var(--p-border-radius-base);
  margin-top: spacing(tight) / 2;

  .Label,
  .SingleSelectOption {
    cursor: pointer;
    border-radius: var(--p-border-radius-base);
    padding: spacing(tight);

    &:hover:not(.disabled) {
      background: var(--p-surface-hovered);
      outline: border-width(base) solid transparent;
    }

    &.select,
    &.select:hover:not(.disabled),
    &:active:not(.disabled) {
      background: var(--p-surface-selected);
      outline: border-width(base) solid transparent;
    }

    &.disabled {
      background: var(--p-surface-disabled);
      cursor: default;
      color: var(--p-text-disabled);
    }
  }

  .SingleSelectOption {
    @include focus-ring;

    &.focused:not(:active) {
      @include focus-ring($style: 'focused');
    }

    &.active {
      background: var(--p-surface-selected);
    }

    &.active::before,
    &.select::before {
      @include list-selected-indicator;
    }
  }
}
